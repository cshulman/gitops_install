- hosts: localhost
  connection: local
  module_defaults:
    community.okd.openshift_auth:
      host: '<cluster-api-url>'
      validate_certs: False
    kubernetes.core.k8s:
      host: '<cluster-api-url>'
      validate_certs: False
  collections:
    - kubernetes.core
  vars:
  - repo_enable_lfs: false
    repo_name: 'GitOps Application Config'
    repo_ssh_private_key_path: '~/.ssh/bitbucket_id_rsa'
    repo_type: 'git'
    repo_url: 'git@bitbucket.org:DudeSolutions/sample-app.git'
    repo_short_name: 'gitops-application'
    gitops_application_name: 'gitops-app'
    application_namespace: 'gitops-app-namespace'
  tasks:
  - block:
    - name: Log in (obtain access token)
      community.okd.openshift_auth:
        username: 'cluster-admin'
        password: '<cluster-admin-password>'
      register: openshift_auth_results

    - name: Slurp in SSH private key
      slurp:
        src: "{{ repo_ssh_private_key_path }}"
      register: repo_ssh_private_key

    - name: Create Repository Secret
      kubernetes.core.k8s:
       api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
       state: present
       definition: "{{ lookup('template', './templates/gitops-repo.yaml.j2') | from_yaml }}"

    - name: Create Another GitOps repo Application
      kubernetes.core.k8s:
       api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
       state: present
       definition: "{{ lookup('template', './templates/gitops-new-application.yaml.j2') | from_yaml }}"

    always:
    - name: If login succeeded, try to log out (revoke access token)
      when: openshift_auth_results.openshift_auth.api_key is defined
      community.okd.openshift_auth:
        state: absent
        api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
